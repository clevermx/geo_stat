gse_gpl[,exp_type:=sapply(prof_exp,FUN = function(x){x[1]})]
gse_gpl[,only_exp:=sapply(prof_exp,FUN = function(x){x[2]})]
print(paste("total (gse,gpl)", length(gse_gpl$gse)))
grp_by_type=gse_gpl[,.(n_gse_gpl=.N), by=list(exp_type,only_exp)]
grp_by_type
dict_exp_type
print(dict_exp_type[1])
lapply(dict_exp_type, print)
needed_type= sum(dict_exp_type[c("Expression profiling by array","Expression profiling by high throughput sequencing")])
print(grp_by_type[exp_type=needed_type])
print(grp_by_type[exp_type==needed_type])
needed_type= c(sum(dict_exp_type[c("Expression profiling by array","Expression profiling by high throughput sequencing")]),dict_exp_type["Expression profiling by array"],dict_exp_type["Expression profiling by high throughput sequencing"])
needed_type
print(grp_by_type[exp_type%in%needed_type])
print(grp_by_type[exp_type%in%needed_type,sum(n_gse_gpl)])
print(grp_by_type[only_exp==1])
#only "expression by.." all types
print(grp_by_type[only_exp==1,sum(n_gse_gpl)])
#only "expression by.." interresting types
print(grp_by_type[only_exp==1 & exp_type%in%needed_type ,sum(n_gse_gpl)])
unique(gse_gpl$annot)
#only "expression by.."  and have annotation (all types)
print(grp_by_type[only_exp==1 & annot==TRUE ,sum(n_gse_gpl)])
grp_by_type=gse_gpl[,.(n_gse_gpl=.N), by=list(exp_type,only_exp,annot)]
needed_type= c(sum(dict_exp_type[c("Expression profiling by array","Expression profiling by high throughput sequencing")]),
dict_exp_type["Expression profiling by array"],
dict_exp_type["Expression profiling by high throughput sequencing"])
print(grp_by_type[exp_type%in%needed_type,sum(n_gse_gpl)])
#only "expression by.." all types
print(grp_by_type[only_exp==1 ,sum(n_gse_gpl)])
#only "expression by.." interresting types
print(grp_by_type[only_exp==1 & exp_type%in%needed_type ,sum(n_gse_gpl)])
#only "expression by.."  and have annotation (all types)
print(grp_by_type[only_exp==1 & annot==TRUE ,sum(n_gse_gpl)])
#only "expression by.."  and have annotation (interesting types)
print(grp_by_type[only_exp==1 & annot==TRUE & exp_type%in%needed_type ,sum(n_gse_gpl)])
#count (gse,gpl)
gse_gpl= DT_GEO[,.(n_gsm=.N,gsms_arch_7=sum(in_arch_7),gsms_arch_8=sum(in_arch_8),gsms_in_dee2=sum(in_dee2) ), by=.(gse,gpl,series_type,annot)]
gse_gpl[,.(gse,
gpl,
n_gsm,
series_type,
annot,
full_in_arch7 = (n_gsm==gsms_arch_7),
full_in_arch8 = (n_gsm==gsms_arch_8),
full_in_dee2 = (n_gsm==gsms_in_dee2)
)]
head(gse_gpl)
needed_type
#73006 for checking
find_exp_type= function(type_str){
exp_types=regmatches(x = type_str,
m = gregexpr(pattern = "expression ([^;$])+",
text =type_str,
ignore.case = TRUE)
)[[1]]
return(c(sum(dict_exp_type[exp_types]),type_str==paste(collapse = ";",exp_types)))
}
# find_exp_numbers= function(type_str){ match(x = regmatches(x = type_str,
#                                                  m = gregexpr(pattern = "expression ([^;$])+",
#                                                               text =type_str,
#                                                               ignore.case = TRUE)
#                                              )[[1]],table = expression_types)
# }
prof_exp= lapply(gse_gpl$series_type,
FUN=find_exp_type)
gse_gpl[,exp_type:=sapply(prof_exp,FUN = function(x){x[1]})]
gse_gpl[,only_exp:=sapply(prof_exp,FUN = function(x){x[2]})]
grp_by_type=gse_gpl[,.(n_gse_gpl=.N),
by=list(exp_type,only_exp,annot,full_in_arch7,full_in_arch8,full_in_dee2)]
gse_gpl=gse_gpl[,.(gse,
gpl,
n_gsm,
series_type,
annot,
full_in_arch7 = (n_gsm==gsms_arch_7),
full_in_arch8 = (n_gsm==gsms_arch_8),
full_in_dee2 = (n_gsm==gsms_in_dee2)
)]
head(gse_gpl)
print(paste("total (gse,gpl)", length(gse_gpl$gse)))
#73006 for checking
find_exp_type= function(type_str){
exp_types=regmatches(x = type_str,
m = gregexpr(pattern = "expression ([^;$])+",
text =type_str,
ignore.case = TRUE)
)[[1]]
return(c(sum(dict_exp_type[exp_types]),type_str==paste(collapse = ";",exp_types)))
}
# find_exp_numbers= function(type_str){ match(x = regmatches(x = type_str,
#                                                  m = gregexpr(pattern = "expression ([^;$])+",
#                                                               text =type_str,
#                                                               ignore.case = TRUE)
#                                              )[[1]],table = expression_types)
# }
prof_exp= lapply(gse_gpl$series_type,
FUN=find_exp_type)
# find_exp_numbers= function(type_str){ match(x = regmatches(x = type_str,
#                                                  m = gregexpr(pattern = "expression ([^;$])+",
#                                                               text =type_str,
#                                                               ignore.case = TRUE)
#                                              )[[1]],table = expression_types)
# }
prof_exp= lapply(gse_gpl$series_type,
FUN=find_exp_type)
gse_gpl[,exp_type:=sapply(prof_exp,FUN = function(x){x[1]})]
gse_gpl[,only_exp:=sapply(prof_exp,FUN = function(x){x[2]})]
grp_by_type=gse_gpl[,.(n_gse_gpl=.N),
by=list(exp_type,only_exp,annot,full_in_arch7,full_in_arch8,full_in_dee2)]
needed_type= c(sum(dict_exp_type[c("Expression profiling by array","Expression profiling by high throughput sequencing")]),
dict_exp_type["Expression profiling by array"],
dict_exp_type["Expression profiling by high throughput sequencing"])
#needed types
print(grp_by_type[exp_type%in%needed_type,sum(n_gse_gpl)])
#only "expression by.." all types
print(grp_by_type[only_exp==1 ,sum(n_gse_gpl)])
#only "expression by.." interesting types
print(grp_by_type[only_exp==1 & exp_type%in%needed_type ,sum(n_gse_gpl)])
#only "expression by.."  and have annotation (all types)
print(grp_by_type[only_exp==1 & annot==TRUE ,sum(n_gse_gpl)])
#only "expression by.."  and have annotation (interesting types)
print(grp_by_type[only_exp==1 & annot==TRUE & exp_type%in%needed_type ,sum(n_gse_gpl)])
#only "expression by.."  and all samples in arch v7(interesting types)
print(grp_by_type[only_exp==1 & full_in_arch7==TRUE & exp_type%in%needed_type ,sum(n_gse_gpl)])
#only "expression by.."  and all samples in arch v7(all types)
print(grp_by_type[only_exp==1 & full_in_arch7==TRUE,sum(n_gse_gpl)])
#only "expression by.."  and all samples in arch v8(all types)
print(grp_by_type[only_exp==1 & full_in_arch8==TRUE,sum(n_gse_gpl)])
#only "expression by.."  and all samples in arch v8(interesting types)
print(grp_by_type[only_exp==1 & full_in_arch8==TRUE & exp_type%in%needed_type ,sum(n_gse_gpl)])
#count (gse,gpl)
gse_gpl= DT_GEO[,.(n_gsm=.N,
gsms_arch_7=sum(in_arch_7),
gsms_arch_8=sum(in_arch_8),
gsms_arch_zoo=sum(in_arch_ZOO)
gsms_in_dee2=sum(in_dee2)
#count (gse,gpl)
gse_gpl= DT_GEO[,.(n_gsm=.N,
gsms_arch_7=sum(in_arch_7),
gsms_arch_8=sum(in_arch_8),
gsms_arch_zoo=sum(in_arch_ZOO),
gsms_in_dee2=sum(in_dee2)
), by=.(gse,gpl,series_type,annot)]
gse_gpl=gse_gpl[,.(gse,
gpl,
n_gsm,
series_type,
annot,
full_in_arch7 = (n_gsm==gsms_arch_7),
full_in_arch8 = (n_gsm==gsms_arch_8),
full_in_arch_zoo = (n_gsm==gsms_arch_zoo),
full_in_dee2 = (n_gsm==gsms_in_dee2)
)]
#73006 for checking
find_exp_type= function(type_str){
exp_types=regmatches(x = type_str,
m = gregexpr(pattern = "expression ([^;$])+",
text =type_str,
ignore.case = TRUE)
)[[1]]
return(c(sum(dict_exp_type[exp_types]),type_str==paste(collapse = ";",exp_types)))
}
# find_exp_numbers= function(type_str){ match(x = regmatches(x = type_str,
#                                                  m = gregexpr(pattern = "expression ([^;$])+",
#                                                               text =type_str,
#                                                               ignore.case = TRUE)
#                                              )[[1]],table = expression_types)
# }
prof_exp= lapply(gse_gpl$series_type,
FUN=find_exp_type)
gse_gpl[,exp_type:=sapply(prof_exp,FUN = function(x){x[1]})]
gse_gpl[,only_exp:=sapply(prof_exp,FUN = function(x){x[2]})]
grp_by_type=gse_gpl[,.(n_gse_gpl=.N),
by=list(exp_type,only_exp,annot,full_in_arch7,full_in_arch8,full_in_dee2,full_in_arch_zoo)]
#only "expression by.."  and all samples in arch zoo(all types)
print(grp_by_type[only_exp==1 & full_in_arch_zoo==TRUE,sum(n_gse_gpl)])
#only "expression by.."  and all samples in arch zoo(interesting types)
print(grp_by_type[only_exp==1 & full_in_arch_zoo==TRUE & exp_type%in%needed_type ,sum(n_gse_gpl)])
#only "expression by.."  and all samples in dee2(all types)
print(grp_by_type[only_exp==1 & full_in_dee2==TRUE,sum(n_gse_gpl)])
#only "expression by.."  and all samples in dee2(interesting types)
print(grp_by_type[only_exp==1 & full_in_dee2==TRUE & exp_type%in%needed_type ,sum(n_gse_gpl)])
print(grp_by_type[sum(n_gse_gpl)])
print(grp_by_type[,sum(n_gse_gpl)])
TRUE | FALSE
TRUE | TRUE
FALSE | FALSE
FALSE | TRUE
#only expression by and at least something (all types)
print(grp_by_type[only_exp==1 & (full_in_dee2==TRUE|
full_in_arch7==TRUE|
full_in_arch8 == TRUE|
full_in_arch_zoo == TRUE|
full_in_dee2==TRUE )   ,sum(n_gse_gpl)])
#only expression by and at least something (interesting types)
print(grp_by_type[only_exp==1 & (full_in_dee2==TRUE|
full_in_arch7==TRUE|
full_in_arch8 == TRUE|
full_in_arch_zoo == TRUE|
full_in_dee2==TRUE ) & exp_type%in%needed_type  ,sum(n_gse_gpl)])
h5_test_file = "D://datasets/ARCHS4_zoo_kalisto/Saccharomyces_cerevisiae_index.idx"
h5ls(h5_test_file,all = TRUE)
h5_o=h5read(arch_h5,"/")
h5_o=h5read(h5_test_file,"/")
h5_test_file = "D://datasets/DEE2/srr_files/ecoli_SRR_matrix.h5"
h5ls(h5_test_file,all = TRUE)
library(rhdf5)
h5ls(h5_test_file,all = TRUE)
h5_o=h5read(h5_test_file,"/")
library(data.table)
geo_platform= fread("d:\\datasets/GEO_stats/geo_platforms.tsv")
geo_samples = fread("d:\\datasets/GEO_stats/geo_samples.tsv")
geo_series= fread("d:\\datasets/GEO_stats/geo_table.tsv")
print(length(unique(geo_platform$Accession)))
print(length(unique(geo_samples$Accession)))
print(length(unique(geo_series$Accession)))
annot_gpl= fread("d:\\datasets/GEO_stats/annot_gpls.txt",header = FALSE,sep = "/",col.names = c("gpl"),select =3 )
DT_GEO=geo_samples[,.(gsm=Accession,gse=strsplit(x = Series,split = ";"),gpl=Platform)]
DT_GEO[,len:=sapply(gse, length)]
DT_GEO=DT_GEO[,.(gsm=rep(gsm,len),gse=unlist(gse),gpl=rep(gpl,len))]
DT_GEO= geo_series[DT_GEO,
.(gsm=i.gsm,
gse=i.gse,
gpl=i.gpl,
series_type=`Series Type`,
annot=i.gpl%in%annot_gpl$gpl),
on="Accession==gse"]
#DT_full_series= DT_splited_GEO[geo_series[,.(Accession,series_type=`Series Type`)],.(gsm,gse,gpl,series_type=i.series_type),on ="gse==Accession"]
unique(geo_platform$Technology)
library(data.table)
library(data.table)
library(data.table)
geo_samples = fread("d:\\datasets/GEO_stats/geo_samples.tsv")
DT_GEO=geo_samples[,.(gsm=Accession,gse=strsplit(x = Series,split = ";"),gpl=Platform)]
DT_GEO[,len:=sapply(gse, length)]
DT_GEO=DT_GEO[,.(gsm=rep(gsm,len),gse=unlist(gse),gpl=rep(gpl,len))]
head(DT_GEO)
library(rhdf5)
h5_files_to_DT= function(path_to_folder){
DT_h5=data.table()
h5_files=list.files(file.path(path_to_folder), '\\.h5$', full.names = TRUE)
for (destfile in h5_files) {
arch_part= data.table(gsm=h5read(destfile,"/meta/Sample_geo_accession"),
gse=strsplit(x = h5read(destfile,"/meta/Sample_series_id"),split = "Xx-xX"),
gpl =h5read(destfile,"/meta/Sample_platform_id"))
DT_h5=rbindlist(l=list(DT_h5,arch_part))
}
DT_h5[,len:=sapply(gse, length)]
DT_h5=DT_h5[,.(gsm=rep(gsm,len),gse=unlist(gse),gpl=rep(gpl,len))]
return(DT_h5)
}
DT_arch7= h5_files_to_DT(path_to_folder = "D://datasets/ARCHS4_v7/")
DT_arch8 = h5_files_to_DT(path_to_folder = "D://datasets/ARCHS4_v8/")
library(rhdf5)
#получает  data.table (gsm,gse,gpl) из всех h5 файлов в папке path_to_folder
h5_files_to_DT= function(path_to_folder){
DT_h5=data.table()
h5_files=list.files(file.path(path_to_folder), '\\.h5$', full.names = TRUE)
for (destfile in h5_files) {
arch_part= data.table(gsm=h5read(destfile,"/meta/Sample_geo_accession"),
gse=strsplit(x = h5read(destfile,"/meta/Sample_series_id"),split = "Xx-xX"),
gpl =h5read(destfile,"/meta/Sample_platform_id"))
DT_h5=rbindlist(l=list(DT_h5,arch_part))
}
DT_h5[,len:=sapply(gse, length)]
DT_h5=DT_h5[,.(gsm=rep(gsm,len),gse=unlist(gse),gpl=rep(gpl,len))]
return(DT_h5)
}
DT_arch7= h5_files_to_DT(path_to_folder = "D://datasets/ARCHS4_v7/")
DT_arch8 = h5_files_to_DT(path_to_folder = "D://datasets/ARCHS4_v8/")
head(DT_arch7)
head(DT_arch8)
#DT_GEO[DT_arch7,on=c(gse="gse",gsm="gsm"),in_arch_7:=(i.gsm==gsm)*100+(i.gse==gse)*10+(i.gpl==gpl)]
DT_in_arch7 = DT_arch7[DT_GEO, # DT_GEO left join DT_arch7
.(gsm=i.gsm,
gse=i.gse,
gpl=i.gpl,
in_arch_7=(i.gsm==gsm)*100+(i.gse==gse)*10+(i.gpl==gpl),
on=c(gse="gse",gsm="gsm")]
DT_in_arch7 = DT_arch7[DT_GEO, # DT_GEO left join DT_arch7
.(gsm=i.gsm,
gse=i.gse,
gpl=i.gpl,
in_arch_7=(i.gsm==gsm)*100+(i.gse==gse)*10+(i.gpl==gpl),
on=c(gse="gse",gsm="gsm")]
DT_in_arch7 = DT_arch7[DT_GEO,
.(gsm=i.gsm,
gse=i.gse,
gpl=i.gpl,
in_arch_7=(i.gsm==gsm)*100+(i.gse==gse)*10+(i.gpl==gpl),
on=c(gse="gse",gsm="gsm")]
# =======  DT_GEO left join DT_arch7 ==========
# способ 1
#DT_GEO[DT_arch7,on=c(gse="gse",gsm="gsm"),in_arch_7:=(i.gsm==gsm)*100+(i.gse==gse)*10+(i.gpl==gpl)]
# способ 2
DT_in_arch7 = DT_arch7[DT_GEO,
.(gsm=i.gsm,
gse=i.gse,
gpl=i.gpl,
in_arch_7=(i.gsm==gsm)*100+(i.gse==gse)*10+(i.gpl==gpl)),
on=c(gse="gse",gsm="gsm")]
head(DT_in_arch7)
print(unique(DT_in_arch7$in_arch_7))
#для 8 версии
DT_in_arch8 = DT_arch8[DT_GEO,
.(gsm=i.gsm,
gse=i.gse,
gpl=i.gpl,
in_arch_8=(i.gsm==gsm)*100+(i.gse==gse)*10+(i.gpl==gpl)),
on=c(gse="gse",gsm="gsm")]
head(DT_in_arch8)
print(unique(DT_in_arch8$in_arch_8))
print(unique(DT_in_arch7$in_arch_7)) # тут получили, что если gsm и gse равны, то и gpl равны
bad_rows= DT_in_arch8[in_arch_8==110]
bad_rows= DT_in_arch8[in_arch_8==110]
print(geo_samples[gsm==bad_rows$gsm,.(Accession,Series,Platform)])
bad_rows= DT_in_arch8[in_arch_8==110]
print(geo_samples[Accession==bad_rows$gsm,.(Accession,Series,Platform)])
bad_rows= DT_in_arch8[in_arch_8==110]
print(geo_samples[Accession %in% bad_rows$gsm,.(Accession,Series,Platform)])
print(DT_arch7[gsm %in% bad_rows$gsm])
print(DT_arch8[gsm %in% bad_rows$gsm])
knit_with_parameters('D:/Projects/R/GSE_stat/wrong_pgl.Rmd', encoding = 'WINDOWS-1252')
knit_with_parameters('D:/Projects/R/GSE_stat/wrong_pgl.Rmd', encoding = 'WINDOWS-1251')
knit_with_parameters('D:/Projects/R/GSE_stat/wrong_pgl.Rmd', encoding = 'WINDOWS-1252')
unlink('wrong_pgl_cache', recursive = TRUE)
knit_with_parameters('D:/Projects/R/GSE_stat/wrong_pgl.Rmd', encoding = 'WINDOWS-1251')
install.packages(data.table)
install.packages("data.table")
install.packages("rtools")
Sys.which("make")
Sys.which("make")
Sys.which("make")
install.packages("data.table")
install.packages("rhdf5",dependencies = TRUE)
install.packages("BiocManager",dependencies = TRUE)
BiocManager::install("rhdf5")
BiocManager::install("data.table")
library(data.table)
data_dir="G:\\datasets/"
geo_platform= fread(data_dir+"GEO_stats/geo_platforms.tsv")
geo_platform= fread(paste0(data_dir,"GEO_stats/geo_platforms.tsv"))
library(data.table)
data_dir="G:\\datasets/"
geo_platform= fread(paste0(data_dir,"GEO_stats/geo_platforms.tsv"))
geo_samples = fread(paste0(data_dir,"GEO_stats/geo_samples.tsv"))
geo_series= fread(paste0(data_dir,"GEO_stats/geo_table.tsv"))
print(length(unique(geo_platform$Accession)))
print(length(unique(geo_samples$Accession)))
print(length(unique(geo_series$Accession)))
annot_gpl= fread(paste0(data_dir,"GEO_stats/annot_gpls.txt",header = FALSE,sep = "/",col.names = c("gpl"),select =3 ))
library(data.table)
data_dir="G:\\datasets/"
geo_platform= fread(paste0(data_dir,"GEO_stats/geo_platforms.tsv"))
geo_samples = fread(paste0(data_dir,"GEO_stats/geo_samples.tsv"))
geo_series= fread(paste0(data_dir,"GEO_stats/geo_table.tsv"))
print(length(unique(geo_platform$Accession)))
print(length(unique(geo_samples$Accession)))
print(length(unique(geo_series$Accession)))
annot_gpl= fread(paste0(data_dir,"GEO_stats/annot_gpls.txt"),header = FALSE,sep = "/",col.names = c("gpl"),select =3 )
DT_GEO=geo_samples[,.(gsm=Accession,gse=strsplit(x = Series,split = ";"),gpl=Platform)]
DT_GEO[,len:=sapply(gse, length)]
DT_GEO=DT_GEO[,.(gsm=rep(gsm,len),gse=unlist(gse),gpl=rep(gpl,len))]
DT_GEO= geo_series[DT_GEO,
.(gsm=i.gsm,
gse=i.gse,
gpl=i.gpl,
series_type=`Series Type`,
annot=i.gpl%in%annot_gpl$gpl),
on="Accession==gse"]
#DT_full_series= DT_splited_GEO[geo_series[,.(Accession,series_type=`Series Type`)],.(gsm,gse,gpl,series_type=i.series_type),on ="gse==Accession"]
library(rhdf5)
h5_files_to_DT= function(path_to_folder){
DT_h5=data.table()
h5_files=list.files(file.path(path_to_folder), '\\.h5$', full.names = TRUE)
for (destfile in h5_files) {
arch_part= data.table(gsm=h5read(destfile,"/meta/Sample_geo_accession"),
gse=strsplit(x = h5read(destfile,"/meta/Sample_series_id"),split = "Xx-xX"),
gpl =h5read(destfile,"/meta/Sample_platform_id"))
DT_h5=rbindlist(l=list(DT_h5,arch_part))
}
DT_h5[,len:=sapply(gse, length)]
DT_h5=DT_h5[,.(gsm=rep(gsm,len),gse=unlist(gse),gpl=rep(gpl,len))]
return(DT_h5)
}
DT_arch7= h5_files_to_DT(path_to_folder = paste0(data_dir,"ARCHS4_v7/"))
DT_GEO[DT_arch7,on=c(gse="gse",gsm="gsm"),in_arch_7:=(i.gsm==gsm)*(i.gse==gse)*(i.gpl==gpl)]
DT_arch8 = h5_files_to_DT(path_to_folder = paste0(data_dir,"ARCHS4_v8/"))
DT_GEO[DT_arch8,on=c(gse="gse",gsm="gsm"),in_arch_8:=(i.gsm==gsm)*(i.gse==gse)*(i.gpl==gpl)]
#trubles with v8!!!
DT_ArchZOO_count=h5_files_to_DT(path_to_folder = paste0(data_dir,"ARCHS4_zoo_counts/"))
DT_GEO[DT_ArchZOO_count,on=c(gse="gse",gsm="gsm"),in_arch_ZOO:=(i.gsm==gsm)*(i.gse==gse)*(i.gpl==gpl)]
meta_data_folder = paste0(data_dir,"DEE2/metadata/")
DT_DEE2_meta=data.table()
DEE2_meta_files=list.files(file.path(meta_data_folder), '\\.tsv.cut$', full.names = TRUE)
for (destfile in DEE2_meta_files) {
dee_part= fread(destfile, header = TRUE,sep = "\t", col.names = c("gsm","gse"),select =c(6,7))
DT_DEE2_meta=rbindlist(l=list(DT_DEE2_meta,dee_part))
}
DT_DEE2_meta=DT_DEE2_meta[startsWith(x = gsm,prefix = "GSM")]
meta_data_folder = paste0(data_dir,"DEE2/metadata/")
DT_DEE2_meta=data.table()
DEE2_meta_files=list.files(file.path(meta_data_folder), '\\.tsv.cut$', full.names = TRUE)
for (destfile in DEE2_meta_files) {
dee_part= fread(destfile, header = TRUE,sep = "\t", col.names = c("gsm","gse"),select =c(6,7))
DT_DEE2_meta=rbindlist(l=list(DT_DEE2_meta,dee_part))
}
meta_data_folder = paste0(data_dir,"DEE2/metadata/")
DT_DEE2_meta=data.table()
DEE2_meta_files=list.files(file.path(meta_data_folder), '\\.tsv.cut$', full.names = TRUE)
DEE2_meta_files=list.files(file.path(meta_data_folder), '\\.tsv$', full.names = TRUE)
for (destfile in DEE2_meta_files) {
dee_part= fread(destfile, header = TRUE,sep = "\t", col.names = c("gsm","gse"),select =c(6,7))
DT_DEE2_meta=rbindlist(l=list(DT_DEE2_meta,dee_part))
}
DT_DEE2_meta=DT_DEE2_meta[startsWith(x = gsm,prefix = "GSM")]
#(gsm,gse) -> (gpl)?
DT_GEO[DT_DEE2_meta,on=c(gse="gse",gsm="gsm"),in_dee2:=(i.gsm==gsm)*(i.gse==gse)]
head(DT_GEO)
#make expression types dict
all_type_strings=unique(unlist(strsplit(geo_series$`Series Type`,split = ";")))
expression_types = all_type_strings[grep(pattern ="expression",x = all_type_strings,ignore.case = TRUE)]
dict_exp_type= 10^(0:(length(expression_types)-1))
names(dict_exp_type)=expression_types
#count (gse,gpl)
gse_gpl= DT_GEO[,.(n_gsm=.N,
gsms_arch_7=sum(in_arch_7),
gsms_arch_8=sum(in_arch_8),
gsms_arch_zoo=sum(in_arch_ZOO),
gsms_in_dee2=sum(in_dee2)
), by=.(gse,gpl,series_type,annot)]
gse_gpl=gse_gpl[,.(gse,
gpl,
n_gsm,
series_type,
annot,
full_in_arch7 = (n_gsm==gsms_arch_7),
full_in_arch8 = (n_gsm==gsms_arch_8),
full_in_arch_zoo = (n_gsm==gsms_arch_zoo),
full_in_dee2 = (n_gsm==gsms_in_dee2)
)]
head(gse_gpl)
print(paste("total (gse,gpl)", length(gse_gpl$gse)))
#73006 for checking
find_exp_type= function(type_str){
exp_types=regmatches(x = type_str,
m = gregexpr(pattern = "expression ([^;$])+",
text =type_str,
ignore.case = TRUE)
)[[1]]
return(c(sum(dict_exp_type[exp_types]),type_str==paste(collapse = ";",exp_types)))
}
# find_exp_numbers= function(type_str){ match(x = regmatches(x = type_str,
#                                                  m = gregexpr(pattern = "expression ([^;$])+",
#                                                               text =type_str,
#                                                               ignore.case = TRUE)
#                                              )[[1]],table = expression_types)
# }
prof_exp= lapply(gse_gpl$series_type,
FUN=find_exp_type)
gse_gpl[,exp_type:=sapply(prof_exp,FUN = function(x){x[1]})]
gse_gpl[,only_exp:=sapply(prof_exp,FUN = function(x){x[2]})]
grp_by_type=gse_gpl[,.(n_gse_gpl=.N),
by=list(exp_type,only_exp,annot,full_in_arch7,full_in_arch8,full_in_dee2,full_in_arch_zoo)]
needed_type= c(sum(dict_exp_type[c("Expression profiling by array","Expression profiling by high throughput sequencing")]),
dict_exp_type["Expression profiling by array"],
dict_exp_type["Expression profiling by high throughput sequencing"])
#needed types
print(grp_by_type[exp_type%in%needed_type,sum(n_gse_gpl)])
#only "expression by.." all types
print(grp_by_type[only_exp==1 ,sum(n_gse_gpl)])
#only "expression by.." interesting types
print(grp_by_type[only_exp==1 & exp_type%in%needed_type ,sum(n_gse_gpl)])
#only "expression by.."  and have annotation (all types)
print(grp_by_type[only_exp==1 & annot==TRUE ,sum(n_gse_gpl)])
#only "expression by.."  and have annotation (interesting types)
print(grp_by_type[only_exp==1 & annot==TRUE & exp_type%in%needed_type ,sum(n_gse_gpl)])
#only "expression by.."  and all samples in arch v7(all types)
print(grp_by_type[only_exp==1 & full_in_arch7==TRUE,sum(n_gse_gpl)])
#only "expression by.."  and all samples in arch v7(interesting types)
print(grp_by_type[only_exp==1 & full_in_arch7==TRUE & exp_type%in%needed_type ,sum(n_gse_gpl)])
#only "expression by.."  and all samples in arch v8(all types)
print(grp_by_type[only_exp==1 & full_in_arch8==TRUE,sum(n_gse_gpl)])
#only "expression by.."  and all samples in arch v8(interesting types)
print(grp_by_type[only_exp==1 & full_in_arch8==TRUE & exp_type%in%needed_type ,sum(n_gse_gpl)])
#only "expression by.."  and all samples in arch zoo(all types)
print(grp_by_type[only_exp==1 & full_in_arch_zoo==TRUE,sum(n_gse_gpl)])
#only "expression by.."  and all samples in arch zoo(interesting types)
print(grp_by_type[only_exp==1 & full_in_arch_zoo==TRUE & exp_type%in%needed_type ,sum(n_gse_gpl)])
#only "expression by.."  and all samples in dee2(all types)
print(grp_by_type[only_exp==1 & full_in_dee2==TRUE,sum(n_gse_gpl)])
#only "expression by.."  and all samples in dee2(interesting types)
print(grp_by_type[only_exp==1 & full_in_dee2==TRUE & exp_type%in%needed_type ,sum(n_gse_gpl)])
#only expression by and at least something (all types)
print(grp_by_type[only_exp==1 & (full_in_dee2==TRUE|
full_in_arch7==TRUE|
full_in_arch8 == TRUE|
full_in_arch_zoo == TRUE|
full_in_dee2==TRUE )   ,sum(n_gse_gpl)])
#only expression by and at least something (interesting types)
print(grp_by_type[only_exp==1 & (full_in_dee2==TRUE|
full_in_arch7==TRUE|
full_in_arch8 == TRUE|
full_in_arch_zoo == TRUE|
full_in_dee2==TRUE ) & exp_type%in%needed_type  ,sum(n_gse_gpl)])
print(grp_by_type[,sum(n_gse_gpl)])
v7_minus_v8 <- fsetdiff(DT_arch7,DT_arch8)
v7_minus_v8 <- fsetdiff(DT_arch8, DT_arch7)
v7_minus_v8 <- fsetdiff(DT_arch7, DT_arch8)
v8_minus_v7 <- fsetdiff(DT_arch8, DT_arch7)
head(v8_minus_v7)
